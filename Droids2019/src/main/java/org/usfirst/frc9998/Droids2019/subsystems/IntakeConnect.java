// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc9998.Droids2019.subsystems;


import org.usfirst.frc9998.Droids2019.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.PIDOutput;
import edu.wpi.first.wpilibj.PIDSource;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.Servo;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;


/**
 *
 */
public class IntakeConnect extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private Servo intakeConnectLeft;
    private Servo intakeConnectRight;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private static double targetPosition;

    public IntakeConnect() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        intakeConnectLeft = new Servo(2);
        addChild("intakeConnectLeft",intakeConnectLeft);
        
        
        intakeConnectRight = new Servo(3);
        addChild("intakeConnectRight",intakeConnectRight);
        
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        targetPosition = -0.45;
        intakeConnectLeft.setBounds(2.0, 1.8, 1.5, 1.2, 1.0);
        intakeConnectRight.setBounds(2.0, 1.8, 1.5, 1.2, 1.0);
    }

    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        setDefaultCommand(new IntakeConnectRun());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop

    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void run() {
        SmartDashboard.putNumber("IntakeLinear", targetPosition);
        intakeConnectLeft.setSpeed(targetPosition);
        intakeConnectRight.setSpeed(targetPosition);
    }

    public void updatePosition(double change) {
        targetPosition = targetPosition + change;
        if (targetPosition > 1.0) {
            targetPosition = 1.0;
        }
        if (targetPosition < -1.0) {
            targetPosition = -1.0;
        }
        SmartDashboard.putNumber("IntakeLinear", targetPosition);
    }

    public void setPosition(double setPoint) {
        targetPosition = setPoint;
        if (targetPosition > 1.0) {
            targetPosition = 1.0;
        }
        if (targetPosition < -1.0) {
            targetPosition = -1.0;
        }
        SmartDashboard.putNumber("IntakeLinear", targetPosition);
    }
}

